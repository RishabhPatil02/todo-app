{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","todos","setTodos","inputText","setInputText","setStatus","value","onChange","e","target","type","className","typr","onClick","preventDefault","text","completed","id","Math","random","console","log","name","Todo","todo","map","item","filter","el","TodoLists","filteredTodos","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","TodoList","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99d67676.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nconst Form=({todos,setTodos,inputText,setInputText,setStatus})=>{\r\n\r\n    const inputTextHandler=(e)=>{\r\n        //console.log(e.target.value);\r\n        setInputText(e.target.value)\r\n    };\r\n\r\n    const submitTododHandler=(e)=>{\r\n        e.preventDefault();\r\n        setTodos([\r\n            ...todos,\r\n            {text:inputText,completed:false,id:Math.random()*1000},\r\n        ]);\r\n        setInputText(\"\");\r\n        console.log(todos);\r\n    }\r\n\r\n    const statusHandler=(e)=>{\r\n        setStatus(e.target.value);\r\n\r\n    };\r\n\r\n    return(\r\n      <form>\r\n          <input value={inputText} onChange={inputTextHandler}  type=\"text\" className=\"todo-input\"/>\r\n          <button className=\"todo-button\" typr=\"submit\" onClick={submitTododHandler}>\r\n              <i className=\"fas fa-plus-square\"></i>\r\n          </button>\r\n          <div className=\"select\">\r\n              <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n                  <option value=\"all\">All</option>\r\n                  <option value=\"completed\">Completed</option>\r\n                  <option value=\"uncompleted\">Uncompleted</option>\r\n              </select>\r\n          </div>\r\n      </form>      \r\n    );\r\n}\r\n\r\nexport default Form;","import React from \"react\";\r\n\r\nconst Todo=({text,todo,todos,setTodos})=>{\r\n\r\n    const deleteHandler=()=>{\r\n        setTodos(todos.filter((el)=>el.id!==todo.id))\r\n    };\r\n\r\n    const completeHandler=()=>{\r\n        setTodos(todos.map(item=>{\r\n            if(item.id===todo.id){\r\n                return{\r\n                    ...item,completed:!item.completed\r\n                };\r\n            }\r\n                return item;\r\n            \r\n        }))\r\n    };\r\n\r\n    return( \r\n        <div className=\"todo\">\r\n            <li className={`todo-item ${todo.completed? \"completed\" : \"\"}`}>{text}</li>\r\n            <button onClick={completeHandler} className=\"complete-btn\"><i className=\"fas fa-check\"></i></button>\r\n            <button onClick={deleteHandler}className=\"trash-btn\"><i className=\"fas fa-trash\"></i></button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todo;","import React from \"react\";\r\nimport Todo from \"./Todo\"\r\nconst TodoLists=({todos,setTodos,filteredTodos})=>{\r\n    console.log(filteredTodos);\r\n    return(\r\n\r\n        <div className=\"todo-container\">\r\n            <ul className=\"todo-list\">\r\n                {filteredTodos.map(todo=>(\r\n                    <Todo \r\n                    todo={todo}\r\n                    setTodos={setTodos}\r\n                    todos={todos} \r\n                    text={todo.text} \r\n                    key={todo.id}/>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoLists;","import React,{useState,useEffect} from \"react\";\nimport './App.css';\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\nfunction App() {\n\n\n \n\n  const[inputText,setInputText]=useState(\"\");\n  const[todos,setTodos]=useState([]);\n  const[status,setStatus]=useState(\"all\");\n  const[filteredTodos,setFilteredTodos]=useState([]);\n\n\n  useEffect(()=>{\n    getLocalTodos();\n  },[]);\n\n  useEffect(()=>{\n    //console.log(\"hey\");\n    filterHandler();\n    saveLocalTodos();\n  },[todos,status]);\n\n\n  const filterHandler = () => {\n    switch(status){\n      case 'completed':\n        setFilteredTodos(todos.filter((todo)=>todo.completed===true));\n        break;\n        case 'uncompleted':\n          setFilteredTodos(todos.filter((todo)=>todo.completed===false));\n          break; \n        default:\n          setFilteredTodos(todos);\n          break; \n    }\n  }\n\n\n  const saveLocalTodos=()=>{\n\n      localStorage.setItem('todos',JSON.stringify(todos))\n    \n  };\n\n\n  const getLocalTodos=()=>{\n    if(localStorage.getItem('todos')===null){\n      localStorage.setItem('todos',JSON.stringify([]))\n    }else{\n      let todoLocal=JSON.parse(localStorage.getItem(\"todos\"));\n      setTodos(todoLocal);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Todo List </h1>\n      </header>\n      <Form \n      inputText={inputText} \n      setInputText={setInputText} \n      todos={todos} \n      setTodos={setTodos}\n      setStatus={setStatus}\n      />\n      <TodoList setTodos={setTodos} todos={todos} inputText={inputText}\n      filteredTodos={filteredTodos}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}